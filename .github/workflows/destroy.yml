name: Destroy Infrastructure

on:
  workflow_dispatch:  # Manual trigger

env:
  AWS_REGION: 'us-east-1'
  TF_STATE_BUCKET: 'dynamic-website-tf-state-2024'

jobs:
  destroy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Check if Terraform State Bucket exists
      id: check_bucket
      run: |
        if aws s3api head-bucket --bucket $TF_STATE_BUCKET 2>/dev/null; then
          echo "bucket_exists=true" >> $GITHUB_OUTPUT
        else
          echo "bucket_exists=false" >> $GITHUB_OUTPUT
          echo "Terraform state bucket does not exist, nothing to destroy"
        fi

    - name: Setup Terraform
      if: steps.check_bucket.outputs.bucket_exists == 'true'
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      if: steps.check_bucket.outputs.bucket_exists == 'true'
      run: |
        terraform init \
          -backend-config="bucket=$TF_STATE_BUCKET" \
          -backend-config="key=terraform.tfstate" \
          -backend-config="region=$AWS_REGION"

    - name: Terraform Destroy
      if: steps.check_bucket.outputs.bucket_exists == 'true'
      run: terraform destroy -auto-approve -input=false

    - name: Delete Terraform State Bucket (Optional)
      if: steps.check_bucket.outputs.bucket_exists == 'true' && github.event.inputs.delete_bucket == 'true'
      run: |
        # Empty the bucket first
        aws s3 rm s3://$TF_STATE_BUCKET --recursive
        # Delete the bucket
        aws s3api delete-bucket --bucket $TF_STATE_BUCKET
        echo "Terraform state bucket deleted"
