name: Deploy to AWS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: 'us-east-1'
  TF_STATE_BUCKET: 'dynamic-website-tf-state-2024'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Create Lambda packages
      run: |
        cd lambda
        pip install -r requirements.txt -t .
        zip -r get_string.zip .
        # Create a separate zip for update_string (same dependencies)
        cp get_string.zip update_string.zip
        cd ..

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Create Terraform State Bucket
      run: |
        # Check if bucket exists, create if it doesn't
        if ! aws s3api head-bucket --bucket $TF_STATE_BUCKET 2>/dev/null; then
          echo "Creating Terraform state bucket: $TF_STATE_BUCKET"
          if [ "$AWS_REGION" = "us-east-1" ]; then
            aws s3api create-bucket \
              --bucket $TF_STATE_BUCKET \
              --region $AWS_REGION
          else
            aws s3api create-bucket \
              --bucket $TF_STATE_BUCKET \
              --region $AWS_REGION \
              --create-bucket-configuration LocationConstraint=$AWS_REGION
          fi
          
          # Enable versioning for state bucket
          aws s3api put-bucket-versioning \
            --bucket $TF_STATE_BUCKET \
            --versioning-configuration Status=Enabled
          
          # Enable encryption for state bucket
          aws s3api put-bucket-encryption \
            --bucket $TF_STATE_BUCKET \
            --server-side-encryption-configuration '{
              "Rules": [
                {
                  "ApplyServerSideEncryptionByDefault": {
                    "SSEAlgorithm": "AES256"
                  }
                }
              ]
            }'
          
          echo "Terraform state bucket created successfully"
        else
          echo "Terraform state bucket already exists"
        fi

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init with Backend
      run: |
        # Initialize Terraform with the S3 backend
        terraform init -migrate-state \
          -backend-config="bucket=$TF_STATE_BUCKET" \
          -backend-config="key=terraform.tfstate" \
          -backend-config="region=$AWS_REGION"

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -input=false -out=tfplan

    - name: Terraform Apply
      run: terraform apply -input=false -auto-approve tfplan

    - name: Output Deployment URLs
      run: |
        echo "Website URL: $(terraform output -raw website_url || echo 'Not available')"
        echo "API URL: $(terraform output -raw api_url || echo 'Not available')"
